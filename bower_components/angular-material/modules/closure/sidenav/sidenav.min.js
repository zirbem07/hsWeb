/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.1-master-3ab002f
 */
function SidenavService(e,n,t,o){function r(e,o){var r=function(){return!1},i=function(){return t.when(n.supplant(l,[o||""]))};return angular.extend({isLockedOpen:r,isOpen:r,toggle:i,open:i,close:i,onClose:angular.noop,then:function(e){return a(o).then(e||angular.noop)}},e)}function i(t,r){var i=e.get(t);return i||r?i:void o.error(n.supplant(l,[t||""]))}function a(n){return e.when(n)["catch"](o.error)}var l="SideNav '{0}' is not available! Did you use md-component-id='{0}'?",d={find:i,waitFor:a};return function(e,n){if(angular.isUndefined(e))return d;var t=n===!0,o=d.find(e,t);return!o&&t?d.waitFor(e):!o&&angular.isUndefined(n)?r(d,e):o}}function SidenavFocusDirective(){return{restrict:"A",require:"^mdSidenav",link:function(e,n,t,o){}}}function SidenavDirective(e,n,t,o,r,i,a,l,d,c,s,u){function m(a,m,p,g){function f(e,n){a.isLockedOpen=e,e===n?m.toggleClass("md-locked-open",!!e):i[e?"addClass":"removeClass"](m,"md-locked-open"),b&&b.toggleClass("md-locked-open",!!e)}function v(e){var t=n.findFocusTarget(m)||n.findFocusTarget(m,"[md-sidenav-focus]")||m,o=m.parent();o[e?"on":"off"]("keydown",S),b&&b[e?"on":"off"]("click",y);var l=$(o,e);return e&&(T=s[0].activeElement,k=r.getLastInteractionType()),h(e),q=c.all([e&&b?i.enter(b,o):b?i.leave(b):c.when(!0),i[e?"removeClass":"addClass"](m,"md-closed")]).then(function(){a.isOpen&&(I.triggerHandler("resize"),t&&t.focus()),l&&l()})}function $(e,n){var t=m[0],o=e[0].scrollTop;if(n&&o){w={top:t.style.top,bottom:t.style.bottom,height:t.style.height};var r={top:o+"px",bottom:"auto",height:e[0].clientHeight+"px"};m.css(r),b.css(r)}if(!n&&w)return function(){t.style.top=w.top,t.style.bottom=w.bottom,t.style.height=w.height,b[0].style.top=null,b[0].style.bottom=null,b[0].style.height=null,w=null}}function h(e){e&&!O?(O=D.css("overflow"),D.css("overflow","hidden")):angular.isDefined(O)&&(D.css("overflow",O),O=void 0)}function C(e){return a.isOpen==e?c.when(!0):(a.isOpen&&g.onCloseCb&&g.onCloseCb(),c(function(t){a.isOpen=e,n.nextTick(function(){q.then(function(e){!a.isOpen&&T&&"keyboard"===k&&(T.focus(),T=null),t(e)})})}))}function S(e){var n=e.keyCode===t.KEY_CODE.ESCAPE;return n?y(e):c.when(!0)}function y(e){return e.preventDefault(),g.close()}var O,b,k,w,D=null,T=null,q=c.when(!0),F=l(p.mdIsLockedOpen),I=angular.element(u),x=function(){return F(a.$parent,{$media:function(n){return d.warn("$media is deprecated for is-locked-open. Use $mdMedia instead."),e(n)},$mdMedia:e})};p.mdDisableScrollTarget&&(D=s[0].querySelector(p.mdDisableScrollTarget),D?D=angular.element(D):d.warn(n.supplant('mdSidenav: couldn\'t find element matching selector "{selector}". Falling back to parent.',{selector:p.mdDisableScrollTarget}))),D||(D=m.parent()),p.hasOwnProperty("mdDisableBackdrop")||(b=n.createBackdrop(a,"md-sidenav-backdrop md-opaque ng-enter")),m.addClass("_md"),o(m),b&&o.inherit(b,m),m.on("$destroy",function(){b&&b.remove(),g.destroy()}),a.$on("$destroy",function(){b&&b.remove()}),a.$watch(x,f),a.$watch("isOpen",v),g.$toggleOpen=C}return{restrict:"E",scope:{isOpen:"=?mdIsOpen"},controller:"$mdSidenavController",compile:function(e){return e.addClass("md-closed").attr("tabIndex","-1"),m}}}function SidenavController(e,n,t,o,r){var i=this;i.isOpen=function(){return!!e.isOpen},i.isLockedOpen=function(){return!!e.isLockedOpen},i.onClose=function(e){return i.onCloseCb=e,i},i.open=function(){return i.$toggleOpen(!0)},i.close=function(){return i.$toggleOpen(!1)},i.toggle=function(){return i.$toggleOpen(!e.isOpen)},i.$toggleOpen=function(n){return o.when(e.isOpen=n)};var a=n.mdComponentId,l=a&&a.indexOf(r.startSymbol())>-1,d=l?r(a)(e.$parent):a;i.destroy=t.register(i,d),l&&n.$observe("mdComponentId",function(e){e&&e!==i.$$mdHandle&&(i.destroy(),i.destroy=t.register(i,e))})}goog.provide("ngmaterial.components.sidenav"),goog.require("ngmaterial.components.backdrop"),goog.require("ngmaterial.core"),SidenavService.$inject=["$mdComponentRegistry","$mdUtil","$q","$log"],SidenavDirective.$inject=["$mdMedia","$mdUtil","$mdConstant","$mdTheming","$mdInteraction","$animate","$compile","$parse","$log","$q","$document","$window"],SidenavController.$inject=["$scope","$attrs","$mdComponentRegistry","$q","$interpolate"],angular.module("material.components.sidenav",["material.core","material.components.backdrop"]).factory("$mdSidenav",SidenavService).directive("mdSidenav",SidenavDirective).directive("mdSidenavFocus",SidenavFocusDirective).controller("$mdSidenavController",SidenavController),ngmaterial.components.sidenav=angular.module("material.components.sidenav");